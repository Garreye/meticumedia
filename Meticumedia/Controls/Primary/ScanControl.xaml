<UserControl x:Class="Meticumedia.Controls.ScanControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:wpfr="clr-namespace:Meticumedia.WPF"
             xmlns:classes="clr-namespace:Meticumedia.Classes"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="900">
    <UserControl.Resources>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ScanTypeEnum">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="classes:ScanType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <wpfr:EnumDescriptionConverter x:Key="enumDescConv" />
        <BooleanToVisibilityConverter x:Key="boolToVis" />

        <ContextMenu x:Key="scanItemContext">
            <MenuItem Header="Edit" Command="{Binding EditSelectedItemCommand}" Visibility="{Binding SingleDirScanSelectionVisibility}" />
            <MenuItem Header="Set Destination Movie Folder" Visibility="{Binding AllMoviesSelectedResultsVisibility}" ItemsSource="{Binding MovieFolderItems}" />
            <MenuItem Header="Set Action To Replace Existing" Command="{Binding SetReplaceExistingCommand}" Visibility="{Binding AllAlreadyExistSelectedResultsVisibility}" />
            <MenuItem Header="Set to Delete" Command="{Binding SetSelectedItemToDeleteCommand}" Visibility="{Binding DirectoryScanAnySelectedResultsVisibility}" />
            <MenuItem Header="Ignore Item(s)" Command="{Binding IgnoreItemsCommand}" Visibility="{Binding DirectoryScanAnySelectedResultsVisibility}" />
            <MenuItem Header="Unignore Items(s)" Command="{Binding UnignoreItemsCommand}" Visibility="{Binding DirectoryScanAnySelectedResultsVisibility}" />
            <MenuItem Header="Locate Episode" Command="{Binding LocateEpisodeCommand}" Visibility="{Binding TvMissingScanSingleMissingSelectedResultsVisibility}" />
            <MenuItem Header="Ignore" Visibility="{Binding TvMissingScanAnySelectedResultsVisibility}">
                <MenuItem Header="Episode(s)" Command="{Binding IgnoreEpisodeCommand}" />
                <MenuItem Header="Season(s)" Command="{Binding IgnoreSeasonCommand}" />
                <MenuItem Header="Show ('Include in Scan' turned off)" Command="{Binding IgnoreShowCommand}" />
            </MenuItem>
        </ContextMenu>

        <DataTemplate x:Key="DirScanTemplate">
            <Border BorderThickness="1" BorderBrush="Black" Margin="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <CheckBox Grid.Row="0" Content="{Binding Action}" IsEnabled="{Binding CanEnable}" IsChecked="{Binding Enable}" FontWeight="Bold" Margin="3" Foreground="{Binding ActionColor}" />
                    <TextBlock Grid.Row="1" Margin="3" Foreground="{Binding ActionColor}" >
                        <Run Text="Source:" />
                        <Run Text="{Binding SourcePathFileName, Mode=OneWay}" FontWeight="Bold"/>
                        <Run Text=" (" />
                        <Run Text="{Binding SourcePathDirectory, Mode=OneWay}" />
                        <Run Text=")" />
                    </TextBlock>
                    <TextBlock Grid.Row="2" Margin="3" Foreground="{Binding ActionColor}">
                        <Run Text="Destination:" />
                        <Run Text="{Binding DestinationPathFileName, Mode=OneWay}" FontWeight="Bold" />
                        <Run Text=" (" />
                        <Run Text="{Binding DestinationPathDirectory, Mode=OneWay}" />
                        <Run Text=")" />
                    </TextBlock>
                </Grid>
            </Border>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="153*" />
            <RowDefinition Height="260*"/>
        </Grid.RowDefinitions>

        <GroupBox Grid.Row="0" Header="Setup">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Perform" Margin="3" VerticalAlignment="Center" />
                    <ComboBox Grid.Column="1" x:Name="cmbScanType" ItemsSource="{Binding Source={StaticResource ScanTypeEnum}}" SelectedItem="{Binding RunType}" Margin="3" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource enumDescConv}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock Grid.Column="2" Text="on" Margin="3" VerticalAlignment="Center" />
                    <ComboBox Grid.Column="3" Margin="3" ItemsSource="{Binding RunSelections}" SelectedItem="{Binding SelectedRunSelection}" />
                    <CheckBox Grid.Column="4" Content="Fast Scan" IsChecked="{Binding Fast}" Margin="3" VerticalAlignment="Center" ToolTip="Skips all items that require database searching." />
                    <CheckBox Grid.Column="5" Content="Reuse Results" IsChecked="{Binding ReuseResults}" Margin="3" VerticalAlignment="Center" ToolTip="Allow results from previously run scans to be reused. Only applies to scan folder check." />
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="3">
                        <ProgressBar Name="pbUpdating" Value="{Binding Progress}"/>
                        <TextBlock x:Name="tbPbText" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ProgressMessage}" />
                    </Grid>

                    <Button Grid.Column="1" Content="{Binding RunButtonText}" Padding="40,5" Margin="3" Command="{Binding RunCommand}" />
                </Grid>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="1" Header="Results" Grid.RowSpan="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <GroupBox Grid.Column="0" Header="View">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <RadioButton Content="Grid" IsChecked="{Binding GridView, Mode=OneWay}" Margin="3" />
                            <RadioButton Content="List" IsChecked="{Binding ListView}" Margin="3" />
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Grid.Column="1" Header="Action Filter">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <CheckBox Content="None" Margin="3" IsChecked="{Binding NoneActionFilter}" />
                            <CheckBox Content="Move/Copy" Margin="3" IsChecked="{Binding MoveCopyActionFilter}" />
                            <CheckBox Content="Rename" Margin="3" IsChecked="{Binding RenameActionFilter}" />
                            <CheckBox Content="Delete" Margin="3" IsChecked="{Binding DeleteActionFilter}" />
                            <CheckBox Content="Queued" Margin="3" IsChecked="{Binding QueuedActionFilter}" />
                            <CheckBox Content="TBD" Margin="3" IsChecked="{Binding TbdActionFilter}" />
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Grid.Column="2" Header="Category Filter">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <CheckBox Content="TV" Margin="3" IsChecked="{Binding TvVideoCategoryFilter}" />
                            <CheckBox Content="Movie" Margin="3" IsChecked="{Binding MovieVideoCategoryFilter}"/>
                            <CheckBox Content="Custom" Margin="3" IsChecked="{Binding CustomCategoryFilter}"/>
                            <CheckBox Content="Trash" Margin="3" IsChecked="{Binding TrashCategoryFilter}"/>
                            <CheckBox Content="Unknown" Margin="3" IsChecked="{Binding UnknownCategoryFilter}"/>
                            <CheckBox Content="Folder" Margin="3" IsChecked="{Binding FolderCategoryFilter}"/>
                            <CheckBox Content="Ignored" Margin="3" IsChecked="{Binding IgnoredCategoryFilter}" />
                            <CheckBox Content="Auto Move" Margin="3" IsChecked="{Binding AutoMoveCategoryFilter}" />
                        </StackPanel>
                    </GroupBox>
                </Grid>

                <wpfr:BindableMultiSelectDataGrid Grid.Row="1" Margin="2" Visibility="{Binding GridView, Converter={StaticResource boolToVis}}" ItemsSource="{Binding OrgItemsCollection}" SelectedItems="{Binding Path=SelectedOrgItems, Mode=OneWayToSource}"
                           AutoGenerateColumns="False" CanUserAddRows="False" EnableRowVirtualization="True" wpfr:Commands.DataGridDoubleClickCommand="{Binding EditSelectedItemCommand}"
                            wpfr:DataGridColumnsBehavior.BindableColumns="{Binding GridColumns}" ContextMenu="{StaticResource scanItemContext}">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Foreground" Value="{Binding ActionColor}"/>
                        </Style>
                    </DataGrid.RowStyle>
                </wpfr:BindableMultiSelectDataGrid>

                <wpfr:BindableMultiSelectListBox Grid.Row="1" Margin="2" Visibility="{Binding ListView, Converter={StaticResource boolToVis}}" 
                        ItemsSource="{Binding OrgItemsCollection}" SelectionMode="Extended"
                        BindableSelectedItems="{Binding Path=SelectedOrgItems, Mode=OneWayToSource}"
                        wpfr:Commands.DataGridDoubleClickCommand="{Binding EditSelectedItemCommand}" ContextMenu="{StaticResource scanItemContext}" 
                        ItemTemplate="{StaticResource DirScanTemplate}" HorizontalContentAlignment="Stretch" ScrollViewer.CanContentScroll="False">
                </wpfr:BindableMultiSelectListBox>

                <Grid Grid.Row="2" Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Check Control:" Margin="3" VerticalAlignment="Center" />
                    <CheckBox Grid.Column="1" Content="Move/Copy" Margin="3" VerticalAlignment="Center" IsChecked="{Binding MoveCopyEnables}" />
                    <CheckBox Grid.Column="2" Content="Delete" Margin="3" VerticalAlignment="Center" IsChecked="{Binding DeleteEnables}" />

                    <Button Grid.Column="3" Margin="3" Content="Add Checked to Queue" Padding="20,3" Command="{Binding QueueItemsCommand}" />
                </Grid>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
